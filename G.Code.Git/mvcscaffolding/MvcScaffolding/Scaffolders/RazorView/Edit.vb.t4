<#@ Template Language="VB" HostSpecific="True" Inherits="DynamicTransform" #>
<#@ Output extension="vbhtml" #>
<#@ assembly name="System.ComponentModel.DataAnnotations" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data.Entity" #>
<#@ assembly name="System.Data.Linq" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.ComponentModel.DataAnnotations" #>
<#@ import namespace="System.Data.Linq.Mapping" #>
<#@ import namespace="System.Data.Objects.DataClasses" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="EnvDTE" #>
<# Dim viewDataType = CType(Model.ViewDataType, CodeType) #>
<# If viewDataType IsNot Nothing #>
@ModelType <#= viewDataType.FullName #>

<# End If #>
@Code
    ViewData("Title") = "<#= Model.ViewName #>"
<# If Not String.IsNullOrEmpty(Model.Layout) #>
    Layout = "<#= Model.Layout #>"
<# End If #>
End Code

<h2><#= Model.ViewName #></h2>

<# If Model.ReferenceScriptLibraries Then #>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<# End If #>
@Using Html.BeginForm()
    @Html.ValidationSummary(True)
    @<fieldset>
        <legend><#= If(Model.ViewDataTypeName, String.Empty) #></legend>

<# For Each modelProp As ModelProperty In GetModelProperties(viewDataType, False).Where(Function(x) x.IsPrimaryKey) #>
        @Html.HiddenFor(Function(model) model.<#= modelProp.Name #>)
<# Next #>
		@Html.Partial("_CreateOrEdit", Model)
        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
End Using

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

